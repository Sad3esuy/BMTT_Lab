/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package B4;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author Administrator
 */
public class frm_Playfair extends javax.swing.JFrame {

    /**
     * Creates new form frm_Playfair
     */
    private PlayfairCipher playfairCipher;
    public frm_Playfair() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFKey = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAMTKey = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtABanMa = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnTaoMT = new javax.swing.JButton();
        btnMaHoa = new javax.swing.JButton();
        btnGiaiMa = new javax.swing.JButton();
        btnMoFile = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtABanRo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("PlayFair Cipher Demo");

        txtAMTKey.setColumns(20);
        txtAMTKey.setRows(5);
        jScrollPane1.setViewportView(txtAMTKey);

        txtABanMa.setColumns(20);
        txtABanMa.setRows(5);
        jScrollPane2.setViewportView(txtABanMa);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Bản rõ:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Key:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Key Matrix:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Bản mã:");

        btnTaoMT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaoMT.setText("Generate Key Matrix");
        btnTaoMT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMTActionPerformed(evt);
            }
        });

        btnMaHoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMaHoa.setText("Mã hoá");
        btnMaHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaHoaActionPerformed(evt);
            }
        });

        btnGiaiMa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGiaiMa.setText("Giải mã");
        btnGiaiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaiMaActionPerformed(evt);
            }
        });

        btnMoFile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMoFile.setText("Open Ciphertext File");
        btnMoFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoFileActionPerformed(evt);
            }
        });

        txtABanRo.setColumns(20);
        txtABanRo.setRows(5);
        jScrollPane4.setViewportView(txtABanRo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTaoMT)
                                .addGap(49, 49, 49)
                                .addComponent(btnMaHoa)
                                .addGap(62, 62, 62)
                                .addComponent(btnGiaiMa)
                                .addGap(55, 55, 55)
                                .addComponent(btnMoFile))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFKey, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane4)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(jLabel1)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFKey, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTaoMT)
                    .addComponent(btnMaHoa)
                    .addComponent(btnMoFile)
                    .addComponent(btnGiaiMa))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaoMTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMTActionPerformed
        String key = txtFKey.getText();
        if (!key.isEmpty()) {
            playfairCipher = new PlayfairCipher(key);

            String keyMatrixString = playfairCipher.getKeyMatrixAsString();

            txtAMTKey.setText(keyMatrixString);
        } else {
            JOptionPane.showMessageDialog(this, "Please enter key to generate key matrix.");
        }
    }//GEN-LAST:event_btnTaoMTActionPerformed

    private void btnMaHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaHoaActionPerformed
        String plaintext = txtABanRo.getText();
        String key = txtFKey.getText();

        if (!plaintext.isEmpty() && !key.isEmpty()) {
            // Tạo đối tượng mới của PlayfairCipher
            playfairCipher = new PlayfairCipher(key);

            // Mã hóa văn bản
            String ciphertext = playfairCipher.encrypt(plaintext);

            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Encrypted successfully.");

            // Cập nhật text area với ciphertext
            txtABanMa.setText(ciphertext);

            // Lưu kết quả mã hóa vào file
            saveToFile(ciphertext);
        } else {
            // Hiển thị thông báo nếu không có plaintext hoặc key
            JOptionPane.showMessageDialog(this, "Please enter plaintext and key.");
        }
    }//GEN-LAST:event_btnMaHoaActionPerformed

    private void btnGiaiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaiMaActionPerformed
        String ciphertext = txtABanMa.getText();  // Sửa tên biến 'txt ciphertext' thành 'txt_ciphertext'
        String key = txtFKey.getText();

        if (!ciphertext.isEmpty() && !key.isEmpty()) {
            // Tạo đối tượng mới của PlayfairCipher
            playfairCipher = new PlayfairCipher(key);

            // Giải mã ciphertext
            String plaintext = playfairCipher.decrypt(ciphertext);  // Thêm dấu '=' vào giữa 'String plaintext'

            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Decrypted successfully.");

            // Cập nhật text area với plaintext
            txtABanRo.setText(plaintext);
        } else {
            // Hiển thị thông báo nếu không có ciphertext hoặc key
            JOptionPane.showMessageDialog(this, "Please enter ciphertext and key.");
        }
    }//GEN-LAST:event_btnGiaiMaActionPerformed

    private void btnMoFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoFileActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Text Files", "txt"));

        // Sửa lỗi thiếu dấu "=" khi gán giá trị
        int userselection = fileChooser.showOpenDialog(this);

        if (userselection == JFileChooser.APPROVE_OPTION) {
            try (BufferedReader bufferedReader = new BufferedReader(new FileReader(fileChooser.getSelectedFile()))) {
                JOptionPane.showMessageDialog(this, "File opened successfully.");

                // Đọc nội dung từ file vào JTextArea
                txtABanMa.read(bufferedReader, null);
                txtABanRo.setText("");
            } catch (IOException e) {
                // Sửa chuỗi lỗi và thêm dấu " để nối thông báo
                JOptionPane.showMessageDialog(this, "Error opening file: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnMoFileActionPerformed

    private void saveToFile(String content) {
    JFileChooser fileChooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Text Files", "txt");
    fileChooser.setFileFilter(filter);
    
    // Sửa lỗi thiếu dấu "=" khi gán giá trị
    int userselection = fileChooser.showSaveDialog(this);
    
    if (userselection == JFileChooser.APPROVE_OPTION) {
        // Sửa lỗi thiếu dấu + khi nối tên file
        try (FileWriter fileWriter = new FileWriter(fileChooser.getSelectedFile() + ".txt")) {
            fileWriter.write(content);
        } catch (IOException e) {
            // Sửa chuỗi lỗi và thêm dấu " để nối thông báo
            JOptionPane.showMessageDialog(this, "Error saving file: " + e.getMessage());
        }
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Playfair.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Playfair().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGiaiMa;
    private javax.swing.JButton btnMaHoa;
    private javax.swing.JButton btnMoFile;
    private javax.swing.JButton btnTaoMT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea txtABanMa;
    private javax.swing.JTextArea txtABanRo;
    private javax.swing.JTextArea txtAMTKey;
    private javax.swing.JTextField txtFKey;
    // End of variables declaration//GEN-END:variables
}

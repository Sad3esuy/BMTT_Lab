/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AES;
import javax.swing.*;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
/**
 *
 * @author nguye
 */
public class frm_AES extends javax.swing.JFrame {
    private static final String REGISTRATION_FILE = "registration.key";  // Định nghĩa tên file lưu registration key
    private boolean isLoggedin = false;  // Biến kiểm tra trạng thái đăng nhập
    /**
     * Creates new form frm_DES
     */
    public frm_AES() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnMaHoa = new javax.swing.JButton();
        txtFTickKet = new javax.swing.JTextField();
        btnDangKy = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtABanRo = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtABanMa = new javax.swing.JTextArea();
        btnGiaiMa = new javax.swing.JButton();
        btnDangNhap = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFUserName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPPass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("MA HOA AES DEMO");

        btnMaHoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMaHoa.setText("Mã hoá");
        btnMaHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaHoaActionPerformed(evt);
            }
        });

        btnDangKy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDangKy.setText("Register");
        btnDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKyActionPerformed(evt);
            }
        });

        txtABanRo.setColumns(20);
        txtABanRo.setRows(5);
        jScrollPane1.setViewportView(txtABanRo);

        txtABanMa.setColumns(20);
        txtABanMa.setRows(5);
        jScrollPane2.setViewportView(txtABanMa);

        btnGiaiMa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGiaiMa.setText("Giải mã");
        btnGiaiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaiMaActionPerformed(evt);
            }
        });

        btnDangNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDangNhap.setText("Login");
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("TickKet:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Bản rõ:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Bản mã:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("UserName:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Password:");

        txtPPass.setText("jPasswordField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(251, 251, 251))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnDangNhap)
                            .addGap(357, 357, 357)
                            .addComponent(btnDangKy))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtFTickKet, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                            .addComponent(txtFUserName, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMaHoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGiaiMa)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPPass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFTickKet, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDangNhap)
                            .addComponent(btnDangKy)))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMaHoa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGiaiMa))
                        .addGap(0, 60, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Phương thức cập nhật trạng thái của các nút (Enable/Disable)
    private void updateButtonState() {
        btnMaHoa.setEnabled(isLoggedin);  // Nút Encrypt chỉ được kích hoạt khi đã đăng nhập
        btnGiaiMa.setEnabled(isLoggedin);  // Nút Decrypt chỉ được kích hoạt khi đã đăng nhập
    }
    private void btnDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKyActionPerformed
        String username = txtFUserName.getText();  // Lấy tên đăng nhập từ textbox
        String password = new String(txtPPass.getPassword());  // Lấy mật khẩu từ textbox mật khẩu

        // Kiểm tra nếu username và password không rỗng
        if (!username.isEmpty() && !password.isEmpty()) {
            try {
                // Tạo registration key từ username và password
                String registrationKey = AESCipher.generateRegistrationKey(username, password);
                // Lưu registration key vào file
                AESCipher.saveRegistrationKeyToFile(registrationKey, REGISTRATION_FILE);
                // Hiển thị thông báo thành công
                JOptionPane.showMessageDialog(this,
                        "Registration successful. Registration Key saved.",
                        "Success", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                // Hiển thị thông báo lỗi nếu có vấn đề khi lưu key
                JOptionPane.showMessageDialog(this,
                        "Error saving registration key: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Hiển thị thông báo nếu username hoặc password rỗng
            JOptionPane.showMessageDialog(this,
                    "Username and Password cannot be empty.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDangKyActionPerformed

    private void btnMaHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaHoaActionPerformed
        String plaintext = txtABanRo.getText();  // Lấy văn bản cần mã hóa từ textbox
        String secretKey = new String(txtPPass.getPassword());  // Lấy mật khẩu làm secret key

        // Kiểm tra nếu plaintext và secretKey không rỗng
        if (!plaintext.isEmpty() && !secretKey.isEmpty()) {
            try {
                // Mã hóa văn bản bằng AES
                String encryptedText = AESCipher.encrypt(plaintext, secretKey);
                // Hiển thị kết quả mã hóa vào textbox "ciphertext"
                txtABanMa.setText(encryptedText);
            } catch (InvalidKeyException | NoSuchAlgorithmException | BadPaddingException |
                     IllegalBlockSizeException | NoSuchPaddingException e) {
                // Hiển thị thông báo lỗi nếu có lỗi trong quá trình mã hóa
                JOptionPane.showMessageDialog(this, "Error encrypting: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Nếu input hoặc secret key rỗng
            JOptionPane.showMessageDialog(this, "Input and Secret Key cannot be empty.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnMaHoaActionPerformed

    private void btnGiaiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaiMaActionPerformed
        String ciphertext = txtABanMa.getText();  // Lấy ciphertext từ textbox
        String secretKey = new String(txtPPass.getPassword());  // Lấy mật khẩu từ textbox mật khẩu

        // Kiểm tra nếu ciphertext và secretKey không rỗng
        if (!ciphertext.isEmpty() && !secretKey.isEmpty()) {
            try {
                // Giải mã ciphertext bằng AES
                String decryptedText = AESCipher.decrypt(ciphertext, secretKey);
                // Hiển thị kết quả giải mã vào textbox "plaintext"
                txtABanRo.setText(decryptedText);
            } catch (InvalidKeyException | NoSuchAlgorithmException | BadPaddingException |
                     IllegalBlockSizeException | NoSuchPaddingException e) {
                // Hiển thị thông báo lỗi nếu có lỗi trong quá trình giải mã
                JOptionPane.showMessageDialog(this, "Error decrypting: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Nếu ciphertext hoặc secretKey rỗng
            JOptionPane.showMessageDialog(this, "Ciphertext and Secret Key cannot be empty.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGiaiMaActionPerformed

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
        String username = txtFUserName.getText();  // Lấy tên người dùng từ textbox
        String password = new String(txtPPass.getPassword());  // Lấy mật khẩu từ textbox mật khẩu

        // Kiểm tra nếu username và password không rỗng
        if (!username.isEmpty() && !password.isEmpty()) {
            try {
                // Đọc registration key từ file
                String registrationKeyFromFile = AESCipher.readRegistrationKeyFromFile(REGISTRATION_FILE);
                // Tạo registration key từ username và password
                String registrationKey = AESCipher.generateRegistrationKey(username, password);

                // Kiểm tra nếu key từ file khớp với key tạo ra từ username và password
                if (registrationKeyFromFile.equals(registrationKey)) {
                    // Đăng nhập thành công
                    JOptionPane.showMessageDialog(this,
                            "Login Successful with Registration Key: " + registrationKey,
                            "Success", JOptionPane.INFORMATION_MESSAGE);

                    // Hiển thị registration key trong textbox "ticket"
                    txtFTickKet.setText(registrationKey);

                    // Đánh dấu trạng thái đã đăng nhập
                    isLoggedin = true;
                    updateButtonState();  // Cập nhật trạng thái của các nút
                } else {
                    // Nếu key không khớp
                    JOptionPane.showMessageDialog(this, "Invalid Username or Password.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException | ClassNotFoundException e) {
                // Xử lý lỗi khi đọc registration key từ file
                JOptionPane.showMessageDialog(this, "Error reading registration key: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Nếu username hoặc password rỗng
            JOptionPane.showMessageDialog(this, "Username and Password cannot be empty.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDangNhapActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_AES().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKy;
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btnGiaiMa;
    private javax.swing.JButton btnMaHoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtABanMa;
    private javax.swing.JTextArea txtABanRo;
    private javax.swing.JTextField txtFTickKet;
    private javax.swing.JTextField txtFUserName;
    private javax.swing.JPasswordField txtPPass;
    // End of variables declaration//GEN-END:variables
}

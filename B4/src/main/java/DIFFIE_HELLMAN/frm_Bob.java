/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DIFFIE_HELLMAN;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.nio.file.Paths;
import java.security.AlgorithmParameterGenerator;
import java.security.AlgorithmParameters;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.MessageDigest;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.KeyAgreement;
import javax.crypto.SecretKey;
import javax.crypto.interfaces.DHPublicKey;
import javax.crypto.spec.DHParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;
/**
 *
 * @author nguye
 */
public class frm_Bob extends javax.swing.JFrame {

    /**
     * Creates new form frm_Alice
     */
    // Declare cryptographic objects
    KeyAgreement bobKeyAgree;
    PublicKey alicePubKey;
    SecretKey bobDesKey;
    Cipher bobCipher;

    public frm_Bob() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBobKey = new javax.swing.JTextField();
        txtAliceKey = new javax.swing.JTextField();
        txtShare = new javax.swing.JTextField();
        txtEncryptShare = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnRun = new javax.swing.JButton();
        btnBobGenerate = new javax.swing.JButton();
        btnAliceDisplay = new javax.swing.JButton();
        btnMakeSec = new javax.swing.JButton();
        btnEncryptSecKey = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Bob");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Bob's key:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Alice's key:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Shared secret:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Encrypt Shared secret:");

        btnRun.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRun.setText("Run encrypt/decrypt form");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        btnBobGenerate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBobGenerate.setText("Bob's  key generate");
        btnBobGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBobGenerateActionPerformed(evt);
            }
        });

        btnAliceDisplay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAliceDisplay.setText("Alice's key display");
        btnAliceDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAliceDisplayActionPerformed(evt);
            }
        });

        btnMakeSec.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMakeSec.setText("Make secret key");
        btnMakeSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeSecActionPerformed(evt);
            }
        });

        btnEncryptSecKey.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEncryptSecKey.setText("Encrypt secret key");
        btnEncryptSecKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptSecKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtShare, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAliceKey, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBobKey, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEncryptShare, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBobGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAliceDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMakeSec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEncryptSecKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBobKey, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBobGenerate))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAliceKey, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAliceDisplay)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtShare, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMakeSec)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel4)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEncryptShare, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEncryptSecKey))
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(btnRun)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBobGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBobGenerateActionPerformed
       try {
            boolean read = false;
            java.nio.file.Path dirPath = Paths.get("src/CryptoUtil");
            if (!java.nio.file.Files.exists(dirPath)) {
                java.nio.file.Files.createDirectories(dirPath);
            }
            while (!read) {
                try (FileInputStream fis 
                        = new FileInputStream(dirPath.resolve("A.pub").toFile())) {
                    read = true;
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            byte[] alicePubKeyEnc;
            try (FileInputStream fis
                    = new FileInputStream(dirPath.resolve("A.pub").toFile())) {
                alicePubKeyEnc = new byte[fis.available()];
                fis.read(alicePubKeyEnc);
            }
            KeyFactory bobKeyFac = KeyFactory.getInstance("DH");
            X509EncodedKeySpec x509KeySpec
                    = new X509EncodedKeySpec(alicePubKeyEnc);
            alicePubKey = bobKeyFac.generatePublic(x509KeySpec);
            DHParameterSpec dhParamSpec = ((DHPublicKey) alicePubKey).getParams();
            KeyPairGenerator bobKpairGen = KeyPairGenerator.getInstance("DH");
            bobKpairGen.initialize(dhParamSpec);
            KeyPair bobKpair = bobKpairGen.generateKeyPair();
            bobKeyAgree = KeyAgreement.getInstance("DH");
            bobKeyAgree.init(bobKpair.getPrivate());
            byte[] bobPubKeyEnc=bobKpair.getPublic().getEncoded();
            try (FileOutputStream fos
                    = new FileOutputStream(dirPath.resolve("B.pub").toFile())) {
                fos.write(bobPubKeyEnc);
            }
            txtBobKey.setText(java.util.Base64.getEncoder()
                    .encodeToString(bobPubKeyEnc));
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnBobGenerateActionPerformed

    private void btnAliceDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAliceDisplayActionPerformed
        try {
            byte[] bkeyP;
            try (FileInputStream fis
                    = new FileInputStream(Paths.get("src/CryptoUtil/A.pub").toFile())) {
                bkeyP = new byte[fis.available()];
                
            fis.read(bkeyP);
            }
            txtAliceKey.setText(bkeyP.toString());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnAliceDisplayActionPerformed

    private void btnMakeSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeSecActionPerformed
        try {
            bobKeyAgree.doPhase(alicePubKey, true);
            byte[] bobSharedSecret = bobKeyAgree.generateSecret();
            txtShare.setText(CryptoUtil.toHexString(bobSharedSecret));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnMakeSecActionPerformed

    private void btnEncryptSecKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptSecKeyActionPerformed
        try {
            bobKeyAgree.doPhase(alicePubKey, true);
            byte[] sharedSecret = bobKeyAgree.generateSecret();
            txtEncryptShare.setText(CryptoUtil.toHexString(sharedSecret));

            MessageDigest sha256 = MessageDigest.getInstance("SHA-256");
            byte[] desKeyBytes = Arrays.copyOf(sha256.digest(sharedSecret), 8);

            SecretKeySpec desKeySpec = new SecretKeySpec(desKeyBytes, "DES");
            txtEncryptShare.setText(Base64.getEncoder().encodeToString(desKeySpec.getEncoded()));

            String fileName = "src/CryptoUtil/B.txt";
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName))) {
                bw.write(Base64.getEncoder().encodeToString(desKeySpec.getEncoded()));
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnEncryptSecKeyActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        frm_DESCS des = new frm_DESCS();
        des.setVisible(true);
    }//GEN-LAST:event_btnRunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Bob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Bob().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAliceDisplay;
    private javax.swing.JButton btnBobGenerate;
    private javax.swing.JButton btnEncryptSecKey;
    private javax.swing.JButton btnMakeSec;
    private javax.swing.JButton btnRun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtAliceKey;
    private javax.swing.JTextField txtBobKey;
    private javax.swing.JTextField txtEncryptShare;
    private javax.swing.JTextField txtShare;
    // End of variables declaration//GEN-END:variables
}
